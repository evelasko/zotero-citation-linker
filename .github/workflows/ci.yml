name: 🧪 Continuous Integration

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'

env:
  NODE_VERSION: '18'

jobs:
  # =================== CODE QUALITY ===================
  lint-and-format:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🔍 Run ESLint
      run: npm run lint
    
    - name: 📝 Check TypeScript compilation
      run: npx tsc --noEmit
    
    # Optional: Add Prettier formatting check
    # - name: 🎨 Check code formatting
    #   run: npx prettier --check .

  # =================== BUILD TESTING ===================
  build-test:
    name: 🔨 Build Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ['18', '20']
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🔨 Build plugin
      run: npm run build
    
    - name: 📂 Verify build outputs
      shell: bash
      run: |
        if [ ! -d "build" ]; then
          echo "❌ Build directory not found!"
          exit 1
        fi
        
        if [ ! -f "build/manifest.json" ]; then
          echo "❌ Built manifest.json not found!"
          exit 1
        fi
        
        if [ ! -f "build/bootstrap.js" ]; then
          echo "❌ Built bootstrap.js not found!"
          exit 1
        fi
        
        if [ ! -f "build/lib.js" ]; then
          echo "❌ Built lib.js not found!"
          exit 1
        fi
        
        # Check if XPI was created
        XPI_COUNT=$(find xpi/ -name "*.xpi" 2>/dev/null | wc -l || echo "0")
        if [ "$XPI_COUNT" -eq 0 ]; then
          echo "❌ No XPI file found!"
          exit 1
        fi
        
        echo "✅ All build outputs verified"

  # =================== PLUGIN VALIDATION ===================
  validate-plugin:
    name: 🔍 Plugin Validation
    runs-on: ubuntu-latest
    needs: [lint-and-format, build-test]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🔨 Build plugin
      run: npm run build
    
    - name: 🔍 Validate manifest.json
      run: |
        # Check manifest structure
        if ! cat build/manifest.json | jq empty 2>/dev/null; then
          echo "❌ Invalid JSON in manifest.json"
          exit 1
        fi
        
        # Check required fields
        REQUIRED_FIELDS=("manifest_version" "name" "version" "applications")
        for field in "${REQUIRED_FIELDS[@]}"; do
          if ! cat build/manifest.json | jq ".$field" | grep -v "null" > /dev/null; then
            echo "❌ Missing required field: $field"
            exit 1
          fi
        done
        
        echo "✅ Manifest validation passed"
    
    - name: 🔍 Validate XPI structure
      run: |
        XPI_FILE=$(find xpi/ -name "*.xpi" | head -n 1)
        if [ -z "$XPI_FILE" ]; then
          echo "❌ No XPI file found"
          exit 1
        fi
        
        # Check XPI contents
        unzip -l "$XPI_FILE" | grep -E "(manifest\.json|bootstrap\.js|lib\.js)" || {
          echo "❌ XPI missing required files"
          exit 1
        }
        
        echo "✅ XPI structure validation passed"

  # =================== SECURITY SCAN ===================
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🔒 Run npm audit
      run: |
        if npm audit --audit-level=moderate; then
          echo "✅ No security vulnerabilities found"
        else
          echo "⚠️ Security vulnerabilities detected"
          npm audit --audit-level=moderate
          exit 1
        fi

  # =================== STATUS CHECK ===================
  ci-complete:
    name: ✅ CI Complete
    runs-on: ubuntu-latest
    needs: [lint-and-format, build-test, validate-plugin]
    if: always()
    
    steps:
    - name: 📊 Check CI status
      run: |
        if [ "${{ needs.lint-and-format.result }}" != "success" ]; then
          echo "❌ Code quality checks failed"
          exit 1
        fi
        
        if [ "${{ needs.build-test.result }}" != "success" ]; then
          echo "❌ Build tests failed"
          exit 1
        fi
        
        if [ "${{ needs.validate-plugin.result }}" != "success" ]; then
          echo "❌ Plugin validation failed"
          exit 1
        fi
        
        echo "✅ All CI checks passed successfully!" 